<tool id="cluster_mofa_embeddings_with_mudata" name="Cluster MOFA Embeddings" version="0.1.0">
    <requirements>
        <requirement type="package" version="1.7.0">scanpy</requirement>
        <requirement type="package" version="0.1.2">muon</requirement>
        <requirement type="package" version="3.5.3">matplotlib</requirement>
        <requirement type="package" version="0.9.1">leidenalg</requirement>
        <requirement type="package" version="0.8.0">louvain</requirement>
        <requirement type="package" version="0.10.2">python-igraph</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python '$script_file'
]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[import scanpy as sc
import muon as mu
import matplotlib
from scanpy import tl
mdata = mu.read_h5mu('$rna_atac_mofa_input')
sc.pp.neighbors(mdata, use_rep="X_mofa")
sc.tl.umap(mdata)

#if $clustering_method.clustering_method == 'leiden'
sc.tl.leiden(mdata,
    key_added='$clustering_method.key_added',
    resolution=$clustering_method.resolution,
    random_state=$clustering_method.random_state,
    use_weights=$clustering_method.use_weights,
    n_iterations=$clustering_method.n_iterations
)
#else if $clustering_method.clustering_method == 'louvain'
sc.tl.louvain(mdata,
    key_added='$clustering_method.key_added',
    resolution=$clustering_method.resolution,
    random_state=$clustering_method.random_state,
    use_weights=$clustering_method.use_weights
)
#end if
figure_clustering = sc.pl.umap(mdata,
    color="$clustering_method.key_added",
    legend_loc='$sc_umap_legend_loc',
    return_fig=True
    )
figure_clustering.savefig("figure_clustering.png")

mu_umap_color = str('$mu_umap_color').strip().split(",")
figure_individual_features = mu.pl.umap(mdata,
    color=mu_umap_color,
    return_fig=True
    )
figure_individual_features.savefig("figure_individual_features.png")
mdata.write("rna_atac_mofa_clustering.h5mu")
]]></configfile>
    </configfiles>
    <inputs>
        <param name="rna_atac_mofa_input" type="data" format="h5mu" label="RNA ATAC with MOFA embeddings"/>
        <conditional name="clustering_method">
            <param argument="clustering_method" type="select" label="Clustering method to use " help="Type of clustering algorithm for conventional clustering based on mofa embeddings">
                        <option value="leiden">Cluster cells into subgroups using 'scanpy.tl.leiden'</option>
                        <option value="louvain">Cluster cells into subgroups using 'scanpy.tl.louvain'</option>
                </param>
            <when value="leiden">
                <param name="resolution" type="float" value="1" label="Coarseness of the clustering" help="Higher values lead to more clusters (resolution in sc.tl.leiden)"/>
                <param name="random_state" type="integer" value="0" label="Random state" help="Change the initialization of the optimization (random_state in sc.tl.leiden)"/>
                <param name="key_added" type="text" value="leiden_joint" label="Key under which to add the cluster labels" help="(key_added in sc.tl.leiden)"/>
                <param name="use_weights" type="boolean" truevalue="True" falsevalue="False" checked="true" label="Use weights from KNN graph?" help="(use_weights in sc.tl.leiden)"/>
                <param name="n_iterations" type="integer" value="-1" label="Number of iterations of the Leiden clustering algorithm to perform" help="Positive values above 2 define the total number of iterations to perform, -1 has the algorithm run until it reaches its optimal clustering. (n_iterations in sc.tl.leiden)"/>
            </when>
            <when value="louvain">
                <param name="resolution" type="float" value="1" label="Coarseness of the clustering" help="Higher values lead to more clusters (resolution in sc.tl.louvain)"/>
                <param name="random_state" type="integer" value="0" label="Random state" help="Change the initialization of the optimization (random_state in sc.tl.louvain)"/>
                <param name="key_added" type="text" value="louvain_joint" label="Key under which to add the cluster labels" help="(key_added in sc.tl.louvain)"/>
                <param name="use_weights" type="boolean" truevalue="True" falsevalue="False" checked="true" label="Use weights from KNN graph?" help="(use_weights in sc.tl.louvain)"/>
            </when>
        </conditional>
        <param name="sc_umap_legend_loc" type="text" value="on data" label="Location of legend" help="legend_loc in sc.pl.umap"/>

        <param name="mu_umap_color" type="text" value="KLF4, chr9:107480158-107492721" label="Keys for annotations of observations/cells or variables/genes" help="Should be separated by comma (color in mu.pl.umap)"/>
    </inputs>
    <outputs>
        <data name="rna_atac_mofa_clustering" format="h5mu" label="MOFA embeddings with clustering" from_work_dir="rna_atac_mofa_clustering.h5mu"/>
        <data name="figure_clustering" format="png" label="UMAP Clustering Scatterplot" from_work_dir="figure_clustering.png"/>
        <data name="figure_individual_features" format="png" label="UMAP Individual Feature Embeddings Scatterplot" from_work_dir="figure_individual_features.png"/>
    </outputs>
    <tests>
        <test>
            <!--Test for leiden clustering-->
            <param name="rna_atac_mofa_input" value="cluster_mofa_embeddings_with_mudata_in.h5mu"/>
            <param name="clustering_method" value="leiden"/>
            <param name="resolution" value="1"/>
            <param name="random_state" value="0"/>
            <param name="key_added"  value="leiden_joint"/>
            <param name="use_weights" value="True"/>
            <param name="n_iterations" value="-1" />
            <param name="sc_umap_legend_loc" value="on data"/>
            <param name="mu_umap_color" value="MIR1302-2HG"/>
            <output name="rna_atac_mofa_clustering" file="rna_atac_mofa_clustering.h5mu"/>
        </test>
        <test>
            <!--Test for louvain clustering-->a
            <param name="rna_atac_mofa_input" value="cluster_mofa_embeddings_with_mudata_in.h5mu"/>
            <param name="clustering_method" value="louvain"/>
            <param name="resolution" value="1"/>
            <param name="random_state" value="0"/>
            <param name="key_added"  value="louvain_joint"/>
            <param name="use_weights" value="True"/>
            <param name="sc_umap_legend_loc" value="on data"/>
            <param name="mu_umap_color" value="MIR1302-2HG"/>
            <output name="rna_atac_mofa_clustering" file="rna_atac_mofa_clustering.h5mu"/>
        </test>
    </tests>
    <help><![CDATA[
    **What it does**
        This tool reads MuData from a h5mu file that contains the data of multiple modalities after multi-omics
        factorial analysis has been applied to it and performs conventional clustering based on the MOFA embeddingsn
        using sc.tl.leiden which uses the Leiden algorithm, or sc.tl.louvain which uses the Louvain algorithm for clustering.

        This can then be visualized using sc.pl.umap and mu.pl.umap for the individual features from modalities.

    ]]></help>
    <citations>
        <citation type="bibtex">
}</citation>
    </citations>
</tool>
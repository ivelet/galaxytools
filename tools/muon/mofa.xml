<tool id="mofa" name="Multi Omics Factorial Analysis with Muon" version="0.1.0">
    <requirements>
        <requirement type="package" version="1.7.0">scanpy</requirement>
        <requirement type="package" version="0.1.2">muon</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python '$script_file'
]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[import scanpy as sc
import muon as mu
mdata = mu.read_h5mu('$rna_atac_input')
#if $load_mofax_model.load_mofax_model == True
import mofax as mfx
model = mfx.mofa_model('$load_mofax_model.mofax_model')
mdata.obsm["X_mofa"] = model.get_factors()
model.close()
#else
n_factors = $mofa_n_factors
mu.tl.mofa(mdata, outfile="models/mofa_modal.hdf5", n_factors=n_factors, gpu_mode=True)
#end if
sc.pp.neighbors(mdata, use_rep="X_mofa")
sc.tl.umap(mdata)
umap_plot = sc.pl.umap(mdata, return_fig=True)
umap_plot.savefig("mofa_umap_plot.png")
mdata.uns = mdata.uns or dict()
celltype_colors_rna = '$first_mod_name' + ':' + '$celltype_colors'
celltype_colors_atac = '$second_mod_name' + ':' + '$celltype_colors'
mdata.uns[celltype_colors_rna] = mdata['$first_mod_name'].uns['$celltype_colors']
mdata.uns[celltype_colors_atac] = mdata['$second_mod_name'].uns['$celltype_colors']
#set $mofa_plot_components = ([x.strip() for x in str($mofa_plot_components).split('.')])
colors_rna = '$first_mod_name' + ':' + '$first_mod_annotation_name'
colors_atac = '$second_mod_name' + ':' + '$second_mod_annotation_name'
first_mod_plot = mu.pl.mofa(mdata, color=colors_rna, components=$mofa_plot_components, return_fig=True)
second_mod_plot = mu.pl.mofa(mdata, color=colors_atac, components=$mofa_plot_components, return_fig=True)
first_mod_plot.savefig("rna_mofa_annotation.png")
second_mod_plot.savefig("atac_mofa_annotation.png")
mdata.write("rna_atac_integration.h5mu")
]]></configfile>
    </configfiles>
    <inputs>
        <param name="rna_atac_input" type="data" format="h5mu" label="RNA ATAC Multimodal Data Matrix"/>
        <param name="first_mod_name" type="text" label="Name of the first modality" value="rna"/>
        <param name="second_mod_name" type="text" label="Name of the second modality" value="atac"/>
        <conditional name="load_mofax_model">
            <param argument="load_mofax_model" type="select" label="Load a trained mofax model?" value="False" help="Set yes if you would like to load a trained mofax model as a hdf5 file, no to train one from scratch">
                    <option value="True">Yes</option>
                    <option value="False">No</option>
            </param>
            <when value="True">
                <param name="mofax_model" type="data" format="hdf5" label="Trained mofax model to use for MOFA"/>
            </when>
            <when value="False">
                <param name="mofa_n_factors" type="integer" label="Number of factors to train the MOFA model with" value="10" help="(n_factors in muon.tl.mofa()), ignored if loading trained model"/>
            </when>
        </conditional>
        <param name="celltype_colors" type="text" label="Name of the color for each modality (Plotting)" value="celltype_colors" help="should be stored in mdata.uns[] for your MuData file"/>
        <param name="first_mod_annotation_name" type="text" label="Cell type annotation color of first modality (Plotting)" value="celltype" help="(color in muon.pl.mofa())"/>
        <param name="second_mod_annotation_name" type="text" label="Cell type annotation name of second modality (Plotting)" value="celltype" help="(color in muon.pl.mofa())"/>
        <param name="mofa_plot_components" type="text" label="Components to plot (Plotting)" value="1,2 . 3,4" help="(components in muon.pl.mofa()), should be dot-separated"/>
    </inputs>
    <outputs>
        <data name="rna_atac_integration" format="h5mu" label="Mofa MuData" from_work_dir="rna_atac_integration.h5mu"/>
        <data name="umap_plot" format="png" label="MOFA UMAP Plot" from_work_dir="mofa_umap_plot.png"/>
        <data name="rna_mofa_annotations" format="png" label="RNA MOFA Annotations" from_work_dir="rna_mofa_annotation.png"/>
        <data name="atac_mofa_annotations" format="png" label="ATAC MOFA Annotations" from_work_dir="atac_mofa_annotation.png"/>
        <data name="rna_atac_mofa_model" format="hdf5" label="MOFA Model" from_work_dir="models/mofa_model.hdf5"/>
    </outputs>
    <tests>
        <test>
            <!--Test to train a MOFA model from scratch-->
            <param name="rna_atac_input" value="rna_atac.h5mu"/>
            <param name="first_mod_name" value="rna"/>
            <param name="second_mod_name" value="atac"/>
            <param name="load_mofax_model" value="False"/>
            <param name="mofax_model" value="mofa_model.hdf5"/>
            <param name="mofa_n_factors" value="10"/>
            <param name="celltype_colors" value="celltype_colors"/>
            <param name="first_mod_annotation_name" value="celltype"/>
            <param name="second_mod_annotation_name" value="celltype"/>
            <param name="mofa_plot_components" value="1,2 . 3,4"/>
            <output name="rna_atac_integration" file="rna_atac_integration.h5mu"/>
            <output name="umap_plot" file="mofa_umap_plot.png"/>
            <output name="rna_mofa_annotations" file="rna_mofa_annotation.png"/>
            <output name="atac_mofa_annotations" file="atac_mofa_annotation.png"/>
        </test>
        <test>
            <!--Test to use an existing MOFA model-->
            <param name="rna_atac_input" value="rna_atac.h5mu"/>
            <param name="first_mod_name" value="rna"/>
            <param name="second_mod_name" value="atac"/>
            <param name="load_mofax_model" value="True"/>
            <param name="mofa_n_factors" value="10"/>
            <param name="celltype_colors" value="celltype_colors"/>
            <param name="first_mod_annotation_name" value="celltype"/>
            <param name="second_mod_annotation_name" value="celltype"/>
            <param name="mofa_plot_components" value="1,2 . 3,4"/>
            <output name="rna_atac_integration" file="rna_atac_integration.h5mu"/>
            <output name="umap_plot" file="mofa_umap_plot.png"/>
            <output name="rna_mofa_annotations" file="rna_mofa_annotation.png"/>
            <output name="atac_mofa_annotations" file="atac_mofa_annotation.png"/>
        </test>
    </tests>
    <help><![CDATA[
    **What it does**
        This tool performs multi omics factor analysis using muon.tl.mofa() on a h5mu matrix containing multimodal data
        and then plots the MOFA embeddings using muon.pl.mofa().

        Multi-omic factor analysis (MOFA) is a group factor analysis method that allows to learn an interpretable latent
        space jointly on multiple modalities.

        Intuitively, it can be viewed as a generalization of PCA for multi-omics data.

        This tool allows you to use an existing trained mofa model or to train one from scratch and then save the model
        to use it next time and save processing time.
    ]]></help>
    <citations>
        <citation type="bibtex">
}</citation>
    </citations>
</tool>
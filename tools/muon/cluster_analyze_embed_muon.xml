<tool id="cluster_analyze_embed_muon" name="Cluster, analyze, and embed multimodal data with muon" version="0.1.0">
    <requirements>
        <requirement type="package" version="1.7.0">scanpy</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python '$script_file'
]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[import scanpy as sc
import muon as mu
mdata = mu.read_h5mu('$mudata_input')
# if $method.method == 'leiden'
mu.tl.leiden(
mdata,
)
# else if $method.method == 'louvain'
mu.tl.louvain(
mdata,
)
# else if $method.method == 'ica'
mu.tl.ica(
mdata,
)
# else if $method.method == 'mofa'
mu.tl.mofa(
mdata,
)
# else if $method.method == 'snf'
mu.tl.snf(
mdata,
)
# else
mu.tl.umap(
mdata,
)
#end if
mdata.write("mudata_with_preprocessing.h5mu")
]]></configfile>
    </configfiles>
    <inputs>
        <param name="mudata_input" type="data" format="h5mu" label="MuData input file to run preprocessing" help="(.h5mu)"/>
        <conditional name="method">
            <param argument="method" type="select" label="Method used for plotting">
                    <option value="leiden">Cluster: Cluster cells using the Leiden algorithm, using 'muon.tl.leiden'</option>
                    <option value="louvain">Cluster: Cluster cells using the Louvain algorithm, using 'muon.tl.louvain'</option>
                    <option value="ica">Analyze: Run Independent Component Analysis, using 'muon.tl.ica'</option>
                    <option value="mofa">Analyze: Run Multi Omics Factor Analysis, using 'muon.tl.mofa'</option>
                    <option value="snf">Analyze: Similarity Network Fusion, using 'muon.tl.snf'</option>
                    <option value="umap">Embed: Embed the multimodal neighborhood graph using UMAP, using 'muon.tl.mofa'</option>
            </param>
            <when value="leiden">
                <param argument="filter_obs_var" type="text" label="Column name in .obs or in .X to be used for filtering" help="(var)"/>
            </when>
            <when value="louvain">
                <param argument="filter_obs_var" type="text" label="Column name in .obs or in .X to be used for filtering" help="(var)"/>
            </when>
            <when value="ica">
            </when>
            <when value="mofa">
                <param argument="filter_obs_var" type="text" label="Column name in .obs or in .X to be used for filtering" help="(var)"/>
            </when>
            <when value="snf">
                <param argument="filter_obs_var" type="text" label="Column name in .obs or in .X to be used for filtering" help="(var)"/>
            </when>
            <when value="umap">
                <param argument="filter_obs_var" type="text" label="Column name in .obs or in .X to be used for filtering" help="(var)"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="mudata_with_preprocessing" format="h5mu" label="MuData with Preprocessing" from_work_dir="mudata_with_preprocessing.h5mu"/>
    </outputs>
    <tests>
        <test>
            <param name="mudata_input" value="mudata_input.h5mu"/>
            <output name="mudata_with_preprocessing" file="mudata_with_preprocessing.h5mu"/>
        </test>
    </tests>
    <help><![CDATA[
    **What it does**
        Import MuData from AnnData is a tool that allows creating a muon.MuData object out of two AnnData objects
        for multimodal omics factorial analysis.
        Furthermore, it runs pp.intersect_obs to keep only entries present in both modalities (AnnData objects) in the
        final MuData file.

    ]]></help>
    <citations>/
        <citation type="bibtex">
}</citation>
    </citations>
</tool>